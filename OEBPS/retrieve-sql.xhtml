<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="generator" content=
"HTML Tidy for Linux (vers 25 March 2009), see www.w3.org" />
<title>www.mannyneira.com: Computers: Universe: A Note on
SQL</title>
<meta name="author" content="Manny Neira" />
<meta name="description" content=
"'Computers: Universe: A Note on SQL' - a page from www.mannyneira.com (the mysterious utility wizard), Manny Neira's personal website." />
<meta name="keywords" content=
"manny, neira, personal, website, the, mysterious, utility, wizard, computers, universe, a, note, on, sql" />






</head>
<body>

<h1><span class="path">Computers:
Universe:</span> A Note on SQL</h1>
<p>With a few tweaks and reservations, UniVerse supports the
Structured Query Language or SQL, which might be seen as an
alternative to RetrieVe, particularly to those familiar with SQL
after experience with database such as Oracle and Ingres.</p>
<p>From a technical point of view, this support is both impressive
and worthwhile. Impressive, because SQL was not designed to deal
with typeless, 'post-relational' (which means basically
'non-relational') databases like PICK. Worthwhile, because anything
that smooths the conversion of a computer system from an existing
base and preserves code is worthwhile.</p>
<p>However, I do not recommend the use of SQL for the development
of new enquiries and reports, much less its use as the primary
reporting engine in an entire system. If it's SQL you want, you
really are better off using a product like Oracle, which was
designed to work with it, and which extends it (via languages like
'PL/SQL' or 'Procedural SQL') into the primary development lanuage
too: giving you a far more consistent development platform.</p>
<p>Successfull systems were being developed using PICK systems, and
the forerunners of RetrieVe, well before SQL was supported. The SQL
support does not fill any functional gap, but rather adds a handy
piece of support when porting systems.</p>
<p>The issue is similar to that between <code>vi</code> and
<code>ED</code>. Whatever objective comparisons might be made
between the tools, they assume a level playing field which does not
exist. <code>ED</code> and <code>RetrieVe</code> start with the
enormouse advantage of having been specifically designed for the
environment within which they work.</p>
<p>For these reasons, this course does not cover SQL, even though
it is supported. If you already know it, you don't need my help
with it. If you don't, don't learn it to use with UniVerse, spend
the time learning RetrieVe.</p>

</body>
</html>
